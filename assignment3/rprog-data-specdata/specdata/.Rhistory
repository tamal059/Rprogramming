flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flags,unique)
unique_vals <- lapply(flags,unique)
print (unique_vals)
unique_vals
length(unique_vals)
sapply(unique_vals,length)
unique_vals
sapply(flags,unique)
library(swirl)
swirl()
head(flags)
dim(flags)
flags$name
class(flags)
cls_list<-lapply(flags,class)
cls_list
sapply(flags,class)
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
dim(cls_vect)
dim(cls_list)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean\)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat[1][1]
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(c(3,4,5,5,5,6,6),unique)
unique_vals<-lapply(flags,unique)
unique_vals
unique_vals
unique_vals<-lapply(flags,length)
sapply(unique_vals,length)
sapply(flags,length)
sapply(flags,unique)
unique_vals[2]
lapply(unique_vals,function(elem)elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class, character(1))
?tappy
??tappy
?tapply
landmass
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,ssummary)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants)
tail(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
prob <- c(.3,.7)
sample(c(0,1),100,replace=TRUE,prob = c(.3,.7))
flips<-sample(c(0,1),100,replace=TRUE,prob = c(.3,.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=.7)
flig2<-rbinom(c(0,1),size=100,prob=.7)
flig2<-rbinom(n=100,size=1,prob=.7)
skip()
flips2<-rbinom(100,size=1,prob=.7)
flips2
sum(flips2)
rnorm(100,size=1,prob=.7)
rnorm(size=1,prob=.7)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5)
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS
)
sample(1,100,replace=TRUE,c(.3,.7))
sample(c(0,1),100,replace = TRUE,c(.3,.7))
flips<-sample(c(0,1),100,replace = TRUE,c(.3,.7))
flips
sum(flips)
swirl()
swirl()
d1<-Sys.Date()
class(d1)
unclass(d1)
print(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
d1
weekdays(d1)
months(d1)
months(t1)
quarters(t1)
quarters(t2)
t3
t3 <- "October 17, 1986 8:24"
t3 <- "October 17, 1986 08:24"
strptime(t3)
strptime(t3,"%B %d, %Y %H:%M")
t4<-strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime
difftime(Sys.time(),t1,units='days')
data(cars)
?cars
head()
head(cars)
plot(cars)
?plot
ccars
cars
plot(cars$speed, y=cars$dist)
plot(cars$dist,cars$speed)
skip()
plot(x=cars$speed, y=cars$dist, xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed",ylab="Stopping Distance")
skip()
skip()
plot(cars,2)
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
skip()
boxplot(mtcars)
?boxplot
skip()
hist(mtcars$mpg)
skip()
exit()
bye()
setwd("../")
getwd("desktop")
dir()
getwd()
setwd("desktopo")
setwd("desktop")
setwd("data_specialization")
setwd("rclass")
setwd("assignment3")
dir()
setwd("rprog-data-specdata")
source("pollutantmean.R")
View(pollutantmean)
View(pollutantmean)
debug(pollutantmean)
pollutantmean("specdata","sulfate")
pollutantmean("specdata","sulfate")
View(pollutantmean)
View(pollutantmean)
dataset <- read.table(file, header=TRUE, sep="\t")
dataset <- read.table("", header=TRUE, sep="\t")
dataset <- read.table("1.csv", header=TRUE, sep="\t")
dir()
dataset <- read.table("332.csv", header=TRUE, sep="\t")
dataset <- read.table("1.csv", header=TRUE, sep="\t")
dataset <- read.table("001.csv", header=TRUE, sep="\t")
class(dataset)
dataset<- data.frame()
setwd("../")
getwd()
dir()
source("pollutantmean.R")
pollutant("specdata","sulfate")
pollutantmean("specdata","sulfate")
debug(pollutantmean)
pollutantmean("specdata","sulfate")
getwd()
?debug
undebug(pollutantmean)
getwd()
list<-list.files()
list[0]
list[1]
list<-list[1:2]
setwd("..?")
setwd("../")
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:2)
setwd("../")
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:2)
setwd("../")
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:2)
debug(pollutantmean)
pollutantmean("specdata","sulfate",1:2)
pollutantmean("\","sulfate",1:2)
pollutantmean("","sulfate",1:2)
getwd()
source("pollutantmean.R")
debug(pollutantmean)
pollutantmean("","sulfate",1:2)
source("pollutantmean.R")
pollutantmean(sulfate",1:2)
pollutantmean("sulfate",1:2)
debug(pollutantmean)
pollutantmean("sulfate",1:2)
pollutantmean("sulfate",1:2)
pollutantmean("sulfate",1:2)
pollutantmean("sulfate",1:2)
pollutantmean("sulfate",1:2)
temp_dataset <-read.table("332.csv", header=TRUE, sep="\t")
x<-data.matrix(temp_dataset)
temp_dataset <-read.table("001.csv", header=TRUE, sep="\t")
x<-data.matrix(temp_dataset)
x<-data.matrix(temp_dataset)
pollutantmean <- function( pollutant, id = 1:332){
#setwd(directory)
file_list <- list.files()
for (file in file_list[id]){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
else if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
#dataExtract<-read.csv(directory)
#data<-data.matrix(dataExtract[pollutant])
data<-data.matrix(dataset[pollutant])
mean(data,na.rm = TRUE)
pollutantmean <- function( pollutant, id = 1:332){
#setwd(directory)
file_list <- list.files()
for (file in file_list[id]){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
else if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
#dataExtract<-read.csv(directory)
#data<-data.matrix(dataExtract[pollutant])
data<-data.matrix(dataset[pollutant])
mean(data,na.rm = TRUE)
undebug(pollutantmean)
debug(pollutantmean)
pollutantmean("sulfate",id=1:1)
source("pollutantmean.R")
x<-pollutantment("sulfate",1:2)
x<-pollutantmean("sulfate",1:2)
View(x)
View(x)
source("pollutantmean.R")
pollutantmean("sulfate",1:2)
source("pollutantmean.R")
x<-pollutantmean("sulfate",1:2)
View(x)
View(x)
source("pollutantmean.R")
poulltantmean("sulfate",1:2)
polltantmean("sulfate",1:2)
pollutantmean("sulfate",1:2)
source("pollutantmean.R")
pollutantmean("sulfate",1:2)
source("pollutantmean.R")
x<-pollutantmean("sulfate",1:2)
data.matrix(x)
source("pollutantmean.R")
x<-pollutantmean("sulfate",1:2)
source("pollutantmean.R")
x<-pollutantmean("sulfate",1:2)
source("pollutantmean.R")
x<-pollutantmean("sulfate",1:10)
x
source("pollutantmean.R")
setwd("../")
getwd()
x<-pollutantmean("specdata","sulfate",1:10)
x
source("pollutantmean.R")
x<-pollutantmean("specdata","sulfate",1:10)
getwd()
setwd("../")
x<-pollutantmean("specdata","sulfate",1:10)
x
getwd()
source("pollutantmean.R")
x<-pollutantmean("specdata","sulfate",1:10)
getwd)()
getwd()
setwd
setwd("../")
getwd()
source("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
getwd()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit(manual = TRUE)
pollutantmean("specdata","nitrate",1:10)
name(x)
name(temp_dataset)
names(temp_dataset)
setwd("specdata")
x<-read.csv("332.csv")
x[!is.na()]
x[!is.na(x)]
is.na(x)
x<-read.csv("001.csv")
is.na(x$ID)
x
x[rowSums(is.na(x)>0),]
m <- structure(c(1, NA, 3, 4, 5,
6, NA, 8, NA, 10,
11, NA, 13, NA, NA), .
Dim = c(5L, 3L))
m <- structure(c(1, NA, 3, 4, 5,
6, NA, 8, NA, 10,
11, NA, 13, NA, NA),
Dim = c(5L, 3L))
m
x1<- x[rowSums(is.na(x))==0,]
x1<- x[rowSums(is.na(x))==0,]
nrow(x1)
x1<- nrow(x[rowSums(is.na(x))==0,])
x1
dataset <-data.frame()
setNames(dataset,c("X","Y"))
dataset <-data.frame(x=numeric(),y=numeric(),z=numeric())
setNames(dataset,c("X","Y","Z"))
setNames(dataset,c("X","Y","Z"))
x<-1:10
x
x[1]
x
length(x)
getwd()
setwd("../")
complete("specdata",c(1))
source("complete.R")
source("complete.R")
complete("specdata",c(1))
complete("specdata",1:2)
setwd("../")
complete("specdata",1:2)
setwd("../")
debug(complete)
complete("specdata",1:2)
setwd("specdata")
source("complete.R")
source("complete.R")
debug(complex)
debug(complete)
complete(1:2)
dataset <-data.frame(x=numeric(),y=numeric())
setNames(dataset,c("id","nobs"))
dataset <-data.frame(x=numeric(),y=numeric())
setNames(dataset,c("id","nobs"))
View(dataset)
View(dataset)
View(dataset)
rm(dataset)
dataset <-data.frame(x=numeric(),y=numeric())
setNames(dataset,c("id","nobs"))
View(dataset)
View(dataset)
rm(dataset)
dataset <-data.frame(x=numeric(),y=numeric())
View(dataset)
View(dataset)
dataset$x<-1
dataset <-data.frame(x=numeric(),y=numeric(),stringsAsFactors = FALSE)
dataset$x<-1
dataset$x[1]<-1
dataset$x[1,1]<-1
dataset$x[1]<-1
dataset[1]<-c(1,1)
dataset <-data.frame(x=numeric(1),y=numeric(1),stringsAsFactors = FALSE)
dataset$x[1]<-1
source("complete.R")
complete(1:2)
source("complete.R")
complete(1:2)
source("complete.R")
complete(1:2)
source("complete.R")
source("complete.R")
complete(1:2)
complete(c(2,4))
setwd("../")
source("complete.R")
complete("specdata",id=1:2)
complete("specdata",id=1:2)
complete("specdata",id=1:15)
x<-complete("specdata",id=1:15)
x$nobs
x<-complete("specdata")
which(x$nobs>150)
?cor
cor(x$id,x$nobs)
temp_dataset <-read.csv("332.csv")
setwd("specdata")
temp_dataset <-read.csv("332.csv")
cor(temp_dataset$sulfate,temp_dataset$nitrate)
temp_dataset<-temp_dataset[rowSums(is.na(temp_dataset))==0,]
cor(temp_dataset$sulfate,temp_dataset$nitrate)
x<-numeric(10)
x
x[1]=1
x
source("corr.R")
source("corr.R")
corr(complete,400)
source("corr.R")
corr(complete,400)
complete["nobs"]
complete()
c<-complete()
getwd()
source("complete.R")
View(complete)
View(complete)
com<-complete()
corr(com,400)
debug(corr)
corr(com,400)
corr(com,400)
undebug(corr)
corr(com,400)
source("corr.R")
corr(com,400)
source("corr.R")
corr(com,400)
corr(com,5000)
cr<-corr(com,100)
summary(cr)
cr<-corr(com,150)
summary(cr)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
